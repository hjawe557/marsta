# Adapted from Makefile.msp430

# Default to STM32F103CB
SUBTARGET = RE


### Code common for all ARM CPUs

CONTIKI_CPU_ARM=$(CONTIKI)/cpu/arm/
CONTIKI_CPU_ARM_COMMON=$(CONTIKI_CPU_ARM)/common

### Define the CPU directory
CONTIKI_CPU=$(CONTIKI_CPU_ARM)/stm32f103
CPU_NAME=$(notdir $(CONTIKI_CPU))

### Define the source files we have in the STM32F103 port

CONTIKI_CPU_DIRS = . ../common/dbg-io ../common/usb ../common loader
#CONTIKI_CPU_DIRS = . ../common loader

STM32F103 += clock.c 
STM32F103 += debug-uart.c 
STM32F103 += newlib-syscalls.c 
STM32F103 += uip-log.c 
STM32F103 += cfs-sdcard-arch.c 
STM32F103 += uspi.c 
STM32F103 += pm.c
STM32F103 += rtc.c
# interrupt-utils.c sys-interrupt.c rtimer-arch.c rtimer-arch-interrupt.c 

# SYSAPPS = codeprop-otf.c
# APPDIRS += $(CONTIKI)/cpu/at91sam7s/loader

# ELFLOADER = elfloader-otf.c elfloader-arm.c symtab.c cfs-ram.c

include $(CONTIKI_CPU_ARM_COMMON)/usb/Makefile.usb

include $(CONTIKI_CPU_ARM_COMMON)/SD-card/Makefile.sdcard

TARGETLIBS = random.c dbg-printf.c dbg-puts.c dbg-putchar.c dbg-sprintf.c dbg-snprintf.c strformat.c

CONTIKI_TARGET_SOURCEFILES += $(STM32F103) $(SYSAPPS) $(ELFLOADER) \
			$(TARGETLIBS) $(UIPDRIVERS) $(USB)

CONTIKI_SOURCEFILES        += $(CONTIKI_TARGET_SOURCEFILES)


THREADS =

### Compiler definitions
ifeq (0,1)
CC       = arm-elf-gcc
LD       = arm-elf-ld
AS       = arm-elf-as
AR       = arm-elf-ar
NM       = arm-elf-nm
OBJCOPY  = arm-elf-objcopy
STRIP    = arm-elf-strip
else
CC       = arm-none-eabi-gcc
LD       = arm-none-eabi-ld
AS       = arm-none-eabi-as
AR       = arm-none-eabi-ar
NM       = arm-none-eabi-nm
OBJCOPY  = arm-none-eabi-objcopy
STRIP    = arm-none-eabi-strip
endif

XSLTPROC=xsltproc

PROJECT_OBJECTFILES += ${addprefix $(OBJECTDIR)/,$(CONTIKI_TARGET_MAIN:.c=.o)}

LINKERSCRIPT = $(CONTIKI_CPU)/STM32F103$(SUBTARGET).ld

STARTUP=${addprefix $(OBJECTDIR)/,startup-STM32F10x.o}

# JTAG program upload
#OPENOCD	 = openocd
#OPENOCD_DIR = $(CONTIKI_CPU_ARM)/openocd/ 
#OPENOCD_CFG = -f arm7_wig.cfg

# USB program upload
SAMIAM=Sam_I_Am
SAMIAM_TTY=/dev/ttyACM0

# Use OpenOCD by default
PROG=openocd

#ARCH_FLAGS= -march=armv7-m -mthumb
ARCH_FLAGS = -mcpu=cortex-m3 -mthumb

CFLAGSNO = -I. -I$(CONTIKI)/core -I$(CONTIKI_CPU) -I$(CONTIKI_CPU)/loader \
	   -I$(CONTIKI_CPU_ARM)/cm3 \
	   -I$(CONTIKI_CPU)/dbg-io \
           -I$(CONTIKI)/platform/$(TARGET) \
           ${addprefix -I,$(APPDIRS)} \
           -DWITH_UIP -DWITH_ASCII -DMCK=$(MCK) \
           -Wall $(ARCH_FLAGS) -g -D SUBTARGET=$(SUBTARGET)

CFLAGS  += $(CFLAGSNO) -O0 -DRUN_AS_SYSTEM -DROM_RUN 
#LDFLAGS += -L $(CONTIKI_CPU) -T $(LINKERSCRIPT) -nostartfiles -Wl,--gc-sections,-Map=$(CPU_NAME).map
LDFLAGS += -L $(CONTIKI_CPU) -T $(LINKERSCRIPT) -nostartfiles -Wl,--no-gc-sections,-Map=$(CPU_NAME).map

CDEPFLAGS = $(CFLAGS) -D __MAKING_DEPS__




### Setup directory search path for source files

CUSTOM_RULE_C_TO_OBJECTDIR_O=yes
CUSTOM_RULE_C_TO_O=yes

%.o: %.c
	$(Q)$(call SILENT_CMD, "CC $@")
	$(Q)$(CC) $(CFLAGS) $< -c

$(OBJECTDIR)/%.o: %.c
	$(Q)$(call SILENT_CMD, "  CC (OBJECTDIR) $@")
	$(Q)$(CC) $(CFLAGS) -c $< -o $@


CUSTOM_RULE_S_TO_OBJECTDIR_O = yes
%.o: %.S
	$(CC) $(CFLAGS) $< -c

$(OBJECTDIR)/%.o: %.S
	$(CC) $(CFLAGS) $< -c  -o $@


CUSTOM_RULE_C_TO_CO=yes

%.co: %.c
	$(Q)$(call SILENT_CMD, "  CC $@")
	$(Q)$(CC) $(CFLAGS) $< -c -o $@

CUSTOM_RULE_C_TO_CE=yes

%.ce: %.o
	$(Q)$(call SILENT_CMD, "  LD $@")
	$(Q)$(LD) $(LDFLAGS) --relocatable -T $(CONTIKI_CPU)/merge-rodata.ld $< -o $@
	$(STRIP) -K _init -K _fini --strip-unneeded -g -x $@

CUSTOM_RULE_LINK=yes

%-stripped.o: %.c
	$(Q)$(call SILENT_CMD, "  STRIP $@")
	$(Q)$(CC) $(CFLAGS) -c $< -o $@
	$(STRIP) --strip-unneeded -g -x $@

%-stripped.o: %.o
	$(Q)$(call SILENT_CMD, "  STRIP $@")
	$(STRIP) --strip-unneeded -g -x -o $@ $<

%.o: ${CONTIKI_TARGET}/loader/%.S
	$(Q)$(call SILENT_CMD, "  AS $@")
	$(Q)$(AS) -o $(notdir $(<:.S=.o)) $<

%-nosyms.$(TARGET): %.co $(PROJECT_OBJECTFILES) contiki-$(TARGET).a $(STARTUP) # $(OBJECTDIR)/empty-symbols.o
	$(Q)$(call SILENT_CMD, "  LD/CC $@")
	$(Q)$(CC) $(LDFLAGS) $(CFLAGS) -nostartfiles -o $@ $(filter-out %.a,$^) $(filter %.a,$^) -lc $(filter %.a,$^)


%.ihex: %.$(TARGET)
	$(Q)$(call SILENT_CMD, "  OBJCOPY $@")
	$(Q)$(OBJCOPY) $^ -O ihex $@

%.bin: %.$(TARGET)
	$(Q)$(call SILENT_CMD, "  OBJCOPY $@")
	$(Q)$(OBJCOPY) -O binary $< $@

.PHONY: symbols.c
ifdef CORE
%.$(TARGET): %.co $(PROJECT_OBJECTFILES) contiki-$(TARGET).a $(STARTUP) $(OBJECTDIR)/symbols.o
	$(Q)$(call SILENT_CMD, "  LD/CC $@")
	$(Q)$(CC) $(LDFLAGS) $(CFLAGS) -nostartfiles -o $@ $(filter-out %.a,$^) $(filter %.a,$^) -lc $(filter %.a,$^)

symbols.c: $(CORE)
	$(NM) $< | awk -f $(CONTIKI_CPU)/builtins.awk -f ../../tools/mknmlist > symbols.c

else
%.$(TARGET): %-nosyms.$(TARGET)
	ln -sf $< $@
endif

empty-symbols.c:
	@${CONTIKI}/tools/make-empty-symbols



ifeq ($(PROG),openocd)
%.u: %.bin
# stm32x should be stm32f1x for newer versions of OpenOCD.
#        $(OPENOCD) $(OPENOCD_DIR) $(OPENOCD_CFG) -c init -c "halt;reset halt;sleep 250;flash probe 0;stm32x mass_erase 0; sleep 500;flash write_bank 0 $< 0;reset halt;resume;sleep 500;exit"
	$(OPENOCD) $(OPENOCD_DIR) $(OPENOCD_CFG) -c init -c "halt;sleep 250;flash probe 0;stm32f1x mass_erase 0; sleep 500;flash write_bank 0 $< 0;reset;sleep 100;shutdown"

%.reset:
	$(OPENOCD) $(OPENOCD_DIR) $(OPENOCD_CFG) \
                   -c init \
                   -c "sleep 250; poll; sleep 250; reset; sleep 250; poll; shutdown" ; true

else ifeq ($(PROG),samiam)
%.u: %.ihex
	$(SAMIAM) "open $(SAMIAM_TTY) , writew 0xffffff64 5a000004"
	$(SAMIAM) "open $(SAMIAM_TTY) , writew 0xffffff64 5a002004"
	$(SAMIAM) "open $(SAMIAM_TTY) , flash $< , go"

endif

ocd_reset:
	$(OPENOCD) -s $(OPENOCD_DIR) $(OPENOCD_CFG) -c init -c "reset halt;resume" -c exit

# Don't use core/loader/elfloader.c, use elfloader-otf.c instead
$(OBJECTDIR)/elfloader.o: 
	echo -n >$@

clean: clean_cpu

.PHONY: stm32test_clean

clean_cpu:
	-rm -rf $(BUILTSRCDIR)

.PRECIOUS: %-nosyms.$(TARGET)
